LIBRARY IEEE;
use IEEE.std_logic_1164.all;

entity ALU is
	port(
	W: in STD_LOGIC_VECTOR(3 downto 0);
	Y: in STD_LOGIC_VECTOR(3 downto 0);
	CBi: in STD_LOGIC;
	Op: in STD_LOGIC_VECTOR(2 downto 0);
	BE: out STD_LOGIC;
	GE: out STD_LOGIC;
	Z: out STD_LOGIC;
	OV: out STD_LOGIC;
	CBo: out STD_LOGIC;
	F: out STD_LOGIC_VECTOR(3 downto 0)
	);
end ALU;
architecture arq_ALU of ALU is

component UnidAritmet
	port( 
	A: in STD_LOGIC_VECTOR (3 downto 0);
	B: in STD_LOGIC_VECTOR (3 downto 0);
	OPau: in STD_LOGIC;
	CBi: in STD_LOGIC;
	CBo: out STD_LOGIC;
	OV: out STD_LOGIC;
	R: out STD_LOGIC_VECTOR(3 downto 0)
	);
end component;
component Logic_Module
port(
	A : in STD_LOGIC_VECTOR(3 downto 0);
	B : in STD_LOGIC_VECTOR(3 downto 0);
	Op: in STD_LOGIC_VECTOR(1 downto 0);
	R : out STD_LOGIC_VECTOR(3 downto 0);
	CY: out STD_LOGIC
	);
end component;
component Flags2
	port(
	iOV : in STD_LOGIC;
	iCB : in STD_LOGIC;
	Op : in STD_LOGIC;
	R : in STD_LOGIC_VECTOR(3 downto 0);
	CY: in STD_LOGIC;
	oOV: out STD_LOGIC;
	oCB: out STD_LOGIC;
	BE: out STD_LOGIC;
	oGE: out STD_LOGIC;
	Z: out STD_LOGIC
	);
end component;
component MUX_Final
	port(
	A: in STD_LOGIC_VECTOR(3 downto 0);
	B: in STD_LOGIC_VECTOR(3 downto 0);
	Sel: in STD_LOGIC;
	R: out STD_LOGIC_VECTOR(3 downto 0)
	);
end component;

signal R_MUX_Anulador : STD_LOGIC_VECTOR(3 downto 0);
signal R_OV : STD_LOGIC;
signal R_CBo : STD_LOGIC;
signal R_UA : STD_LOGIC_VECTOR(3 downto 0);
signal R_LM : STD_LOGIC_VECTOR(3 downto 0);
signal signalCY : STD_LOGIC;
signal R_MUX_Final: STD_LOGIC_VECTOR(3 downto 0);

begin
	UMUX_Anulador: MUX_Final port map(
		A(0) => '0',
		A(1) => '0',
		A(2) => '0',
		A(3) => '0',
		B => Y,
		sel => Op(1),
		R => R_MUX_Anulador
	);
	UUnidAritmet: UnidAritmet port map(
		A <= W,
		B <= R_MUX_Anulador,
		OPau <= Op(0),
		CBi <= CBi,
		CBo <= R_CBo,
		OV <= R_OV,
		R <= R_UA
	);
	ULogic_Module: Logic_Module port map(
		A <= W,
		B <= Y,
		Op(0) <= Op(0),
		Op(1) <= Op(1),
		R <= R_LM,
		CY <= signalCY
	);
	UMUX_Final: MUX_Final port map(
		A <= R_UA,
		B <= R_LM,
		Sel <= Op(2),
		R <= R_MUX_Final
	);	
	UFlags2: Flags2 port map(
		iOV <= R_OV,
		iCB <= R_CBo,
		Op <= Op(2),
		R <= R_MUX_Final,
		CY <= signalCY,
		oOV <= OV,
		oCB <= CBo,
		BE <= BE,
		oGE <= GE,
		Z <= Z
	);	
	F <= R_MUX_Final;
end arq_ALU;